{
  "uid" : "7621e2e3f92778f9",
  "name" : "test_delete_some_contact",
  "fullName" : "test.test_del_contact.test_delete_some_contact",
  "historyId" : "c24e51a3645090c407c247ba3176af37",
  "time" : {
    "start" : 1507300244034,
    "stop" : 1507300244395,
    "duration" : 361
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "failed",
  "statusDetails" : {
    "message" : "NoSuchElementException: Message: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[value='28']\"}\nStacktrace:\n    at FirefoxDriver.prototype.findElementInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:10991)\n    at FirefoxDriver.prototype.findElement (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:11000)\n    at DelayedCommand.prototype.executeInternal_/k (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12877)\n    at DelayedCommand.prototype.executeInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12882)\n    at DelayedCommand.prototype.execute/< (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12824)",
    "trace" : "app = <fixture.application.Apllication object at 0x036D1550>\ndb = <fixture.db.DbFixture object at 0x037FC0D0>, check_ui = False\n\n    def test_delete_some_contact(app, db, check_ui):\n        if len(db.get_contact_list()) == 0:\n            app.contact.create(Contact(firstname=\"Test contact\"))\n        old_contacts = db.get_contact_list()\n        contact = random.choice(old_contacts)\n>       app.contact.delete_contact_by_id(contact.id)\n\ntest\\test_del_contact.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixture\\contact.py:171: in delete_contact_by_id\n    self.select_contact_by_id(id)\nfixture\\contact.py:65: in select_contact_by_id\n    wd.find_element_by_css_selector(\"input[value='%s']\" % id).click()\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:457: in find_element_by_css_selector\n    return self.find_element(by=By.CSS_SELECTOR, value=css_selector)\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:791: in find_element\n    'value': value})['value']\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:256: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x036E6030>\nresponse = {'status': 500, 'value': '{\"name\":\"findElement\",\"sessionId\":\"130b0524-43e3-4690-a2de-967d4d2bd6b1\",\"status\":7,\"value\":...pbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js\",\"lineNumber\":12824,\"columnNumber\":5}]}}'}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = WebDriverException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:\n            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[value='28']\"}\nE       Stacktrace:\nE           at FirefoxDriver.prototype.findElementInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:10991)\nE           at FirefoxDriver.prototype.findElement (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:11000)\nE           at DelayedCommand.prototype.executeInternal_/k (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12877)\nE           at DelayedCommand.prototype.executeInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12882)\nE           at DelayedCommand.prototype.execute/< (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12824)\n\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:194: NoSuchElementException",
    "flaky" : false
  },
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "host",
    "value" : "PC-Lite"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "thread",
    "value" : "5840-MainThread"
  }, {
    "name" : "suite",
    "value" : "test.test_del_contact"
  }, {
    "name" : "testClass",
    "value" : "test.test_del_contact"
  }, {
    "name" : "testMethod",
    "value" : "test_delete_some_contact"
  }, {
    "name" : "package",
    "value" : "test.test_del_contact"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "7621e2e3f92778f9.json",
  "statusDetailsSafe" : {
    "message" : "NoSuchElementException: Message: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[value='28']\"}\nStacktrace:\n    at FirefoxDriver.prototype.findElementInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:10991)\n    at FirefoxDriver.prototype.findElement (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:11000)\n    at DelayedCommand.prototype.executeInternal_/k (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12877)\n    at DelayedCommand.prototype.executeInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12882)\n    at DelayedCommand.prototype.execute/< (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12824)",
    "trace" : "app = <fixture.application.Apllication object at 0x036D1550>\ndb = <fixture.db.DbFixture object at 0x037FC0D0>, check_ui = False\n\n    def test_delete_some_contact(app, db, check_ui):\n        if len(db.get_contact_list()) == 0:\n            app.contact.create(Contact(firstname=\"Test contact\"))\n        old_contacts = db.get_contact_list()\n        contact = random.choice(old_contacts)\n>       app.contact.delete_contact_by_id(contact.id)\n\ntest\\test_del_contact.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixture\\contact.py:171: in delete_contact_by_id\n    self.select_contact_by_id(id)\nfixture\\contact.py:65: in select_contact_by_id\n    wd.find_element_by_css_selector(\"input[value='%s']\" % id).click()\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:457: in find_element_by_css_selector\n    return self.find_element(by=By.CSS_SELECTOR, value=css_selector)\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:791: in find_element\n    'value': value})['value']\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:256: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x036E6030>\nresponse = {'status': 500, 'value': '{\"name\":\"findElement\",\"sessionId\":\"130b0524-43e3-4690-a2de-967d4d2bd6b1\",\"status\":7,\"value\":...pbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js\",\"lineNumber\":12824,\"columnNumber\":5}]}}'}\n\n    def check_response(self, response):\n        \"\"\"\n            Checks that a JSON response from the WebDriver does not have an error.\n    \n            :Args:\n             - response - The JSON response from the WebDriver server as a dictionary\n               object.\n    \n            :Raises: If the response contains an error message.\n            \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = WebDriverException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException and 'alert' in value:\n            raise exception_class(message, screen, stacktrace, value['alert'].get('text'))\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"input[value='28']\"}\nE       Stacktrace:\nE           at FirefoxDriver.prototype.findElementInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:10991)\nE           at FirefoxDriver.prototype.findElement (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/driver-component.js:11000)\nE           at DelayedCommand.prototype.executeInternal_/k (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12877)\nE           at DelayedCommand.prototype.executeInternal_ (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12882)\nE           at DelayedCommand.prototype.execute/< (file:///C:/Users/User/AppData/Local/Temp/tmpbe_hzndt/extensions/fxdriver@googlecode.com/components/command-processor.js:12824)\n\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:194: NoSuchElementException",
    "flaky" : false
  },
  "statusMessage" : {
    "present" : true
  },
  "parameterValues" : [ ]
}